{"version":3,"sources":["services/api.js","services/apicalls.js","context/context.js","comopnents/cataloguecard.js","comopnents/poduct.js","App.js","serviceWorker.js","context/reducer.js","context/provider.js","index.js"],"names":["axios","create","baseURL","newRating","rating","api","post","getRating","offset","limit","get","params","getRatings","pid","ThemeContext","React","createContext","status","data","Cataloguecard","props","dispatch","useContext","Context","className","style","color","onClick","console","log","type","payload","avg","count","textAlign","padding","width","initialPage","Product","state","useState","setRating","ratings","setRatings","page","setPage","error","setError","formError","setFormError","formSuccess","setFormSuccess","useEffect","services","then","res","catch","err","marginTop","marginLeft","display","minWidth","background","borderRadius","margin","border","onSubmit","event","preventDefault","uid","comment","required","placeholder","name","onChange","ev","target","value","length","map","item","marginBottom","key","marginRight","initialState","App","products","setProducts","setCount","float","Boolean","window","location","hostname","match","reducer","action","Consumer","ContextProvider","AppContext","useReducer","Provider","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.308de93b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst BASE_URL = \"https://ratingo.herokuapp.com/\"\n\nexport default () => {\n    return axios.create({\n      baseURL: BASE_URL\n    })\n  }","import api from './api'\n\nexport default {\n    newRating (rating){\n        return api().post('newRating', rating) \n    },\n    getRating (offset, limit) {\n      return api().get('getRating', {params:{offset:offset, limit:limit}})\n    },\n    getRatings (pid, offset, limit) {\n      return api().get('getRatings', {params:{offset:offset, limit:limit, pid:pid}})\n    }\n  }","import React from 'react';\nconst initialState = {status: false, data:[]}\nconst ThemeContext = React.createContext(initialState);\nexport default ThemeContext;","import React, {useContext} from 'react';\nimport Context from '../context/context'\nconst Cataloguecard = (props) => {\n    const { dispatch} = useContext(Context);\n    let showProduct = () =>{\n        console.log(props)\n        dispatch({type:'SET_PRODUCT', payload:{pid:props.pid, avg:props.avg, count:props.count}})\n    }\n    return ( \n        <div className=\"cards\" style={{ color:'#fff'}} onClick={showProduct}>\n            <h1 className=\"title\" style={{textAlign:'center', padding:'3%', width:'100%'}}>{props.pid}</h1>\n            <h3>Rating:{props.avg}({props.count})</h3>\n        </div> \n    );\n}\n \nexport default Cataloguecard;","import React, {useEffect, useState, useContext} from 'react'\nimport services from '../services/apicalls'\nimport Context from '../context/context'\nconst initialState = {pid: null, avg:null, count:null}\nconst initialPage = {offset:1, limit:5}\n\nfunction Product(props){\n    const {state, dispatch} = useContext(Context);\n    const [rating, setRating] = useState({});\n    const [ratings, setRatings] = useState([]);\n    const [page, setPage] = useState(initialPage);\n    const [error, setError] = useState(false);\n    const [formError, setFormError] = useState(false);\n    const [formSuccess, setFormSuccess] = useState(false);\n    useEffect(\n        ()=>{\n            if(state.data.pid)\n                {\n                    services.getRatings(state.data.pid, page.offset, page.limit)\n                    .then(res=>{\n                        if(res.data.data){\n                            setRatings(res.data.data)\n                        }\n                        else{\n                            setError(true)\n                        }\n                    })\n                    .catch(err=>{\n                        setError(true);\n                    })\n                \n            }\n        },[page.offset]\n    );\n    let next_handler=()=>{\n        setPage({...page, offset: page.offset + 1});\n    }\n    let prev_handler=()=>{\n        setPage({...page, offset: page.offset-1})\n    }\n    let submitRating = (event) =>{\n        event.preventDefault();\n        if(rating.uid && rating.rating && rating.comment){\n            services.newRating({...rating, pid:state.data.pid})\n            .then(res=>{\n                setFormError(false);\n                setFormSuccess(true);\n            }) \n            .catch(err=>{\n                console.log(err)\n                setFormError(true)\n                setFormSuccess(false)\n            })\n        }\n    }\n    return ( \n        <div style={{marginTop:'7%'}}>\n            <div className=\"cards\" style={{ marginLeft:'25vw',width:'50vw', color:'white', display:'block'}}>\n              <div className=\"flex-container\" > \n                <div style={{minWidth:'20vw', background:\"#414550\", borderRadius:'15px', margin:'5%'}}> \n                    <h1 className=\"title\" style={{padding:'10%', border:'0'}}>{state.data.pid}</h1>\n                </div>\n                <div style={{ marginLeft:'10%', marginTop:'5%'}}>\n                    <h2>Avg Rating: {state.data.avg}</h2>\n                    <h3>No. of Ratings: {state.data.count}</h3>\n                </div>\n              </div>\n            </div>\n            <div style={{color:'white'}}>\n                <h2>Add your rating:</h2>\n                <form onSubmit={submitRating}>\n                    <input required type=\"text\" className=\"cusInput\" placeholder=\"UserID\" name=\"username\" style={{margin:'2%'}} onChange={ev => setRating({...rating, uid:ev.target.value})}/>\n                    <input required type=\"number\" className=\"cusInput\" placeholder=\"Rating(1to5)\" style={{width:'7vw', margin:'2%'}} name=\"rating\" onChange={ev => setRating({...rating, rating:ev.target.value})}/>\n                    <input type=\"text\" className=\"cusInput\" placeholder=\"Comment\" name=\"comment\" style={{width:'10vw', margin:'2%'}} onChange={ev => setRating({...rating, comment:ev.target.value})}/>\n                    <button className=\"cusBut1\">Submit</button>\n                </form>\n                {\n                    formError &&\n                    <h1>Wrong Input try again.</h1>\n                }\n                {\n                    formSuccess &&\n                    <h1>Rating Submitted successfully!</h1>\n                }\n                <h2>Ratings:</h2>\n                {ratings.length>0 &&\n                    <>\n                    {    ratings.map(item=>(\n                            <div style={{marginBottom:'3%'}}>\n                            <div key={item.uid} style={{ display:'inline',background:'#414550', borderRadius:'10px', padding:'1%'}}>\n                                <span className=\"rating\" style={{marginRight:'2%'}}>User:{item.uid}</span>\n                                <span className=\"rating\" style={{marginRight:'2%'}}>Rating:{item.rating}</span>\n                                <span className=\"rating\">Comment:{item.comment}</span>\n                            </div>\n                            </div>\n                        ))\n                    }\n                    <div style={{display:'flex', marginLeft:'40%'}}>          \n                        {\n                            page.offset<state.data.count/5 &&\n\n                            <p className=\"next\" onClick={next_handler}>Next</p>\n                        \n                        }\n                        {\n                            page.offset>1 && \n                            <p className=\"prev\" onClick={prev_handler}>Prev</p>\n                        }\n                    </div>\n                    </>\n                }\n                {\n                    ratings.length===0 &&\n                    <h2>No ratings to Show!!</h2>\n                }\n            </div>\n            {\n                error &&\n                <div>\n                    <h1>Error occured!!!</h1>\n                </div>\n            }\n        </div> \n    );\n}\n \nexport default Product;","import React, {useState, useEffect, useContext} from 'react'\nimport './App.css';\nimport services from './services/apicalls'\nimport CatalogueCard from './comopnents/cataloguecard'\nimport Product from './comopnents/poduct'\nimport Context from './context/context'\nconst initialState = {offset:1, limit:10};\nfunction App() {\n  const {state} = useContext(Context)\n  const [products, setProducts] = useState([]);\n  const [page, setPage] = useState(initialState);\n  const [error, setError] = useState(false);\n  const [count, setCount] = useState(0);\n  const next_handler =()=>{ \n   setPage({...page, offset: page.offset+1})\n  }\n  const prev_handler =()=>{\n    setPage({...page, offset: page.offset-1})\n  }\n  useEffect(()=>{\n      services.getRating(page.offset, page.limit)\n      .then(res=>{\n        console.log(res.data)\n        if(res.data.data && res.data.count){\n          setProducts(res.data.data);\n          setCount(res.data.count);\n        }\n        else\n        setError(true);\n      })\n      .catch(err=>{\n        console.log(err)\n        setError(true);\n      })\n  }, [page.offset])\n  return (\n    <div className=\"App\">\n      <div className=\"topbar\">\n          <h1 className=\"title\" style={{float:'left', border:'1px double white', borderRadius:'0px', marginLeft:'2%'}}>ratin<br/>GO</h1>\n          </div>\n          {!state.status &&\n          <>\n            <div className=\"flex-container\">\n              {\n                products.map(item=>(\n                  \n                  <CatalogueCard pid={item.pid} count={item.count} avg={item.avg} key={item.pid}/>\n                \n                ))\n              }\n            </div>\n            \n            <div style={{display:'flex', marginLeft:'40%'}}>          \n              {\n                page.offset<count/10 &&\n\n                <p className=\"next\" onClick={next_handler}>Next</p>\n              \n              }\n              {\n                page.offset>1 && \n                <p className=\"prev\" onClick={prev_handler}>Prev</p>\n              }\n            </div>\n          </>\n          }\n          {\n            state.status &&\n            <Product/>\n          }\n          {\n            error &&\n            <div>\n              <h1>Some Error Occured!!!</h1>\n            </div>\n          }\n        \n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default function reducer(state, action){\n    \n    switch(action.type){\n        case 'SET_PRODUCT': \n        return {\n            ...state, status: true, \n            data: {pid:action.payload.pid,\n                   avg:action.payload.avg,\n                   count:action.payload.count      \n            }\n        }\n        case 'UNSET_PRODUCT': return{\n            ...state, status: false,\n            data: []\n        }\n        default: return{...state}\n    }\n}","import React, {useContext, useReducer} from 'react'\nimport Context from './context';\nimport reducer from './reducer';\n// Create an exportable consumer that can be injected into components\nexport const StateConsumer = Context.Consumer;\n// Create the provider using a functional component\nfunction ContextProvider(props){\n    const AppContext = useContext(Context);\n    const [state, dispatch] = useReducer(reducer, AppContext);\n    return (\n      // value prop is where we define what values \n      // that are accessible to consumer components\n       <Context.Provider value={{state, dispatch}}>\n        {props.children}\n      </Context.Provider>\n    )\n  \n}\nexport default ContextProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport StateProvider from './context/provider'\n\nconst Wrap = () =>{\n    \n    return (\n        <StateProvider>\n            <App/>\n        </StateProvider>\n    );\n}\n\nReactDOM.render(<Wrap/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}